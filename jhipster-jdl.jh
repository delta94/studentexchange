entity Country {
   name String,
   enabled Boolean,
   createAt LocalDate,
   updateAt LocalDate
}

entity Region {
   name String,
   enabled Boolean,
   createAt LocalDate,
   updateAt LocalDate
}

entity City {
   name String,
   index Integer,
   enabled Boolean,
   createAt LocalDate,
   updateAt LocalDate
}

entity District {
   name String,
   enabled Boolean,
   createAt LocalDate,
   updateAt LocalDate
}

entity Ward {
   name String,
   enabled Boolean,
   createAt LocalDate,
   updateAt LocalDate
}

relationship ManyToMany {
   Region{user(login)} to User
}

relationship OneToMany {
   Country{cities} to City,
   City{districts} to District,
   Region{countries} to Country,
   District{wards} to Ward
}

enum Gender {
   MALE, FEMALE, OTHER
}

entity Profile {
   fullName String,
   gender Gender,
   email String,
   mobile String,
   address String,
   currentAddress String,
   citizenship String,
   createAt LocalDate,
   updateAt LocalDate
}

relationship OneToOne {
   Profile{createBy(login)} to User,
   Profile{updateBy(login)} to User,
   Profile{city(name)} to City,
   Profile{district(name)} to District
}

enum StatusType {
   OPEN, PENDING, PAID, CANCELED, EXPIRED, SOLD
}

entity MyOrder {
   code String,
   avatar String,
   amountDiscount Float,
   amountPaid Float,
   createAt LocalDate,
   updateAt LocalDate
}

relationship ManyToOne {
   MyOrder{createBy(login)} to User,
   MyOrder{updateBy(login)} to User
}

enum OrderStatus {
  DEPOSITED, ARE_BUYING, PURCHASED, SELLER_DELIVERY, WAREHOUSE_CHINA, DELIVERING_CHINA_VIETNAM, WAREHOUSE_VIETNAM, DELIVERY_REQUIREMENTS, DELIVERING_VIETNAM, DELIVERED, CANCELLED, LOST, RETURN
}

entity OrderHistory {
   status OrderStatus,
   statusName String,
   createAt LocalDate,
   updateAt LocalDate
}

relationship ManyToOne {
   OrderHistory{order(code)} to MyOrder
   OrderHistory{createBy(login)} to User,
   OrderHistory{updateBy(login)} to User
}

enum CustomerLevel {
   NORMAL, SILVER, GOLD, PLATINUM
}

enum PaymentMethod {
   CASH, BANK_TRANSFER, CARD, PAYPAL
}

enum PaymentStatusType {
   PENDING, PAID, CANCELED
}

entity OrderItem {
   avatar String,
   originLink String,
   name String,
   note String,
   price Float,
   priceNDT Float,
   propertiesId String,
   propertiesImage String,
   propertiesMD5 String,
   propertiesName String,
   propertiesType String,
   quantityOrder Integer,
   quantityPending Integer,
   quantityReceived Integer,
   totalPrice Float,
   totalPriceNDT Float,
   website String,
   createAt LocalDate,
   updateAt LocalDate
}

entity OrderPackage {

}

relationship ManyToOne {
   OrderItem{order(code)} to MyOrder,
   OrderItem{createBy(login)} to User,
   OrderItem{updateBy(login)} to User
}

enum TransactionType {
   DEPOSIT, ORDER_PAYMENT
}

entity OrderTransaction {
   amount OrderStatus,
   note String,
   status TransactionType,
   orderDate LocalDate,
   createAt LocalDate,
   updateAt LocalDate
}

relationship ManyToOne {
   OrderTransaction{order(code)} to MyOrder,
   OrderTransaction{createBy(login)} to User,
   OrderTransaction{updateBy(login)} to User
}

enum CommentType {
   CUSTOMER_LOG, CUSTOMER_CHAT, STAFF_LOG, STAFF_CHAT, SYSTEM_LOG
}

entity OrderComment {
   message String,
   sender String,
   type CommentType,
   createAt LocalDate
}

relationship ManyToOne {
   OrderTransaction{order(code)} to MyOrder,
   OrderTransaction{createBy(login)} to User,
   OrderTransaction{updateBy(login)} to User
}

entity ShoppingCart {
   aliwangwang String,
   depositAmount Float,
   depositRatio Float,
   serviceFee Float,
   serviceFeeDiscount Float,
   itemChecking Bool,
   itemWoodCrating Bool,
   shopId String,
   shopLink String,
   shopName String,
   shopNote String,
   sourceData String,
   totalAmount Float,
   totalLink Integer,
   totalQuantity Integer,
   finalAmount Float,
   website String,
   createAt LocalDate,
   updateAt LocalDate
}

relationship ManyToOne {
   ShoppingCart{createBy(login)} to User,
   ShoppingCart{updateBy(login)} to User
}

entity ShoppingCartItem {
   itemId String,
   itemImage String,
   itemLink String,
   itemPrice Float,
   itemPriceNDT Float,
   itemNote String,
   propertiesId String,
   propertiesImage String,
   propertiesMD5 String,
   propertiesName String,
   propertiesType String,
   quantity Integer,
   requireMin Integer,
   totalAmount Float,
   totalAmountNDT Float,
   createAt LocalDate,
   updateAt LocalDate
}

relationship ManyToOne {
   ShoppingCartItem to ShoppingCart
   ShoppingCartItem{createBy(login)} to User,
   ShoppingCartItem{updateBy(login)} to User
}

// Set pagination options
paginate Region, City, District, Ward, Country with pagination

paginate Profile with pagination

dto * with mapstruct

// Set service options to all except few
service all with serviceClass

filter Region, City, District, Ward, Country, Profile
