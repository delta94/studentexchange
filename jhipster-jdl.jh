entity Country {
   name String,
   enabled Boolean,
   createAt LocalDate,
   updateAt LocalDate
}

entity Region {
   name String,
   enabled Boolean,
   createAt LocalDate,
   updateAt LocalDate
}

entity City {
   name String,
   index Integer,
   enabled Boolean,
   createAt LocalDate,
   updateAt LocalDate
}

entity District {
   name String,
   enabled Boolean,
   createAt LocalDate,
   updateAt LocalDate
}

entity Ward {
   name String,
   enabled Boolean,
   createAt LocalDate,
   updateAt LocalDate
}

relationship ManyToMany {
   Region{user(login)} to User
}

relationship OneToMany {
   Country{cities} to City,
   City{districts} to District,
   Region{countries} to Country,
   District{wards} to Ward
}

enum Gender {
   MALE, FEMALE, OTHER
}

entity Profile {
   fullName String,
   gender Gender,
   email String,
   mobile String,
   address String,
   currentAddress String,
   citizenship String,
   createAt LocalDate,
   updateAt LocalDate
}

relationship OneToOne {
   Profile{createBy(login)} to User,
   Profile{updateBy(login)} to User,
   Profile{city(name)} to City,
   Profile{district(name)} to District
}

enum StatusType {
   OPEN, PENDING, PAID, CANCELED, EXPIRED, SOLD
}

entity Order {
   code String,
   avatar String,
   amountDiscount Float,
   amountPaid Float,
   createAt LocalDate,
   updateAt LocalDate
}

relationship ManyToOne {
   Order{createBy(login)} to User,
   Order{updateBy(login)} to User
}

enum OrderStatus {
  DEPOSITED, ARE_BUYING, PURCHASED, SELLER_DELIVERY, WAREHOUSE_CHINA, DELIVERING_CHINA_VIETNAM, WAREHOUSE_VIETNAM, DELIVERY_REQUIREMENTS, DELIVERING_VIETNAM, DELIVERED, CANCELLED, LOST, RETURN
}

entity OrderHistory {
   status OrderStatus,
   statusName String,
   createAt LocalDate,
   updateAt LocalDate
}

relationship ManyToOne {
   OrderHistory{order(code)} to Order
   OrderHistory{createBy(login)} to User,
   OrderHistory{updateBy(login)} to User
}

enum CustomerLevel {
   NORMAL, SILVER, GOLD, PLATINUM
}

enum PaymentMethod {
   CASH, BANK_TRANSFER, CARD, PAYPAL
}

enum PaymentStatusType {
   PENDING, PAID, CANCELED
}

entity OrderItem {
   avatar String,
   originLink String,
   name String,
   note String,
   price Float,
   priceNDT Float,
   propertiesId String,
   propertiesImage String,
   propertiesMD5 String,
   propertiesName String,
   propertiesType String,
   quantityOrder Integer,
   quantityPending Integer,
   quantityReceived Integer,
   totalPrice Float,
   totalPriceNDT Float,
   website String,
   createAt LocalDate,
   updateAt LocalDate
}

relationship ManyToOne {
   OrderItem{order(code)} to Order,
   OrderItem{createBy(login)} to User,
   OrderItem{updateBy(login)} to User
}

enum TransactionType {
   DEPOSIT, ORDER_PAYMENT
}

entity OrderTransaction {
   amount OrderStatus,
   note String,
   status TransactionType,
   orderDate LocalDate,
   createAt LocalDate,
   updateAt LocalDate
}

relationship ManyToOne {
   OrderTransaction{order(code)} to Order,
   OrderTransaction{createBy(login)} to User,
   OrderTransaction{updateBy(login)} to User
}

enum CommentType {
   CUSTOMER_LOG, CUSTOMER_CHAT, STAFF_LOG, STAFF_CHAT, SYSTEM_LOG
}

entity OrderComment {
   message String
}

entity ShoppingCart {
   orderStatus OrderStatus,
   orderDate LocalDate,
   createAt LocalDate,
   updateAt LocalDate
}

relationship ManyToOne {
   ShoppingCart{createBy(login)} to User,
   ShoppingCart{updateBy(login)} to User
}

entity ShoppingCartByShop {
   serviceFee Float,
   serviceFeeDiscount Float,
   aliwangwang String,
   shopId String,
   shopLink String,
   shopName String,
   sourceData String,
   totalAmount Float,
   totalLink Float,
   totalQuantity Float,
   website String,
   createAt LocalDate,
   updateAt LocalDate
}

relationship OneToOne {
   ShoppingCartByShop{createBy(login)} to User,
   ShoppingCartByShop{updateBy(login)} to User
}

entity ShoppingCartItem {
   avatar String,
   originLink String,
   name String,
   note String,
   price Float,
   priceNDT Float,
   propertiesId String,
   propertiesImage String,
   propertiesMD5 String,
   propertiesName String,
   propertiesType String,
   quantityOrder Integer,
   quantityPending Integer,
   quantityReceived Integer,
   totalPrice Float,
   totalPriceNDT Float,
   website String,
   createAt LocalDate,
   updateAt LocalDate
}

relationship OneToMany {
   ShoppingCartByShop to ShoppingCartItem
}

// Set pagination options
paginate Region, City, District, Ward, Country with pagination

paginate Profile, Article, Category with pagination

paginate Payment with pagination

dto * with mapstruct

// Set service options to all except few
service all with serviceClass

filter Region, City, District, Ward, Country, Profile, Article, Category, Payment
